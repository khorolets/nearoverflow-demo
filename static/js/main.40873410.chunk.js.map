{"version":3,"sources":["config.js","components/Header/index.js","App.js","modules/questions.js","lib/constants.js","components/QuestionForm/index.js","components/Box/index.js","components/QuestionsList/item.js","components/QuestionsList/index.js","components/Answer/index.js","components/AnswerForm/index.js","components/QuestionDetail/index.js","routes.js","modules/common.js","modules/index.js","index.js"],"names":["CONTRACT_NAME","process","module","exports","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","keyPath","HOME","masterAccount","Error","Header","currentUser","signIn","signOut","Navbar","fixed","bg","variant","className","Brand","to","Button","onClick","defaultProps","App","state","questionText","props","wallet","requestSignIn","nearConfig","window","location","href","console","log","this","Container","children","React","Component","connect","commonReducer","walletConnection","initialState","questions","SET_QUESTIONS","setQuestions","dispatch","type","payload","QUESTION_MIN_PRICE","Big","times","toFixed","ANSWER_PRICE","BOATLOAD_OF_GAS","QuestionForm","handleSubmit","e","preventDefault","length","contract","create_question","content","reward","Jumbotron","Row","Col","Form","onSubmit","Group","Control","value","onChange","setState","target","placeholder","Box","title","number","active","QuestionListItem","questionId","answers","author_account_id","Card","Body","xs","filter","ans","is_correct","Text","Title","QuestionList","list_questions","then","response","Fragment","Object","keys","slice","reverse","map","key","questionsReducer","Answer","isLoading","handleMarkAsCorrect","markAsCorrect","id","handleUpvote","upvoteAnswer","account_id","block","sime","questionIsLocked","accountId","questionAuthor","size","Spinner","animation","AnswerForm","create_answer","question_id","parseInt","Alert","QuestionDetail","answerId","match","params","question","answer","alert","set_correct_answer","answer_id","upvote","upvote_answer","withRouter","exact","path","QuestionsList","INITIAL_STATE","combineReducers","action","createStoreWithMiddleware","applyMiddleware","thunkMiddleware","createStore","a","getConfig","nearAPI","deps","keyStore","BrowserLocalStorageKeyStore","near","getAccountId","account","amount","balance","viewMethods","changeMethods","sender","nearInitPromise","initContract","initialProps","ReactDOM","render","StrictMode","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.40873410.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || 'nearoverflow.testnet'\n\nfunction getConfig(env) {\n    switch (env) {\n        case 'production':\n        case 'development':\n            return {\n                networkId: 'default',\n                nodeUrl: 'https://rpc.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.nearprotocol.com',\n                helperUrl: 'https://near-contract-helper.onrender.com'\n            }\n        case 'staging':\n            return {\n                networkId: 'staging',\n                nodeUrl: 'https://staging-rpc.nearprotocol.com/',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://near-wallet-staging.onrender.com',\n                helperUrl: 'https://near-contract-helper-staging.onrender.com'\n            }\n        case 'local':\n            return {\n                networkId: 'local',\n                nodeUrl: 'http://localhost:3030',\n                keyPath: `${process.env.HOME}/.near/validator_key.json`,\n                walletUrl: 'http://localhost:4000/wallet',\n                contractName: CONTRACT_NAME\n            }\n        case 'test':\n        case 'ci':\n            return {\n                networkId: 'shared-test',\n                nodeUrl: 'http://shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near'\n            }\n        case 'ci-staging':\n            return {\n                networkId: 'shared-test-staging',\n                nodeUrl: 'http://staging-shared-test.nearprotocol.com:3030',\n                contractName: CONTRACT_NAME,\n                masterAccount: 'test.near'\n            }\n        case 'tatooine':\n            return {\n                networkId: 'tatooine',\n                nodeUrl: 'https://rpc.tatooine.nearprotocol.com',\n                contractName: CONTRACT_NAME,\n                walletUrl: 'https://wallet.tatooine.nearprotocol.com'\n            }\n        default:\n            throw Error(`Unconfigured environment '${env}'. Can be configured in src/config.js.`)\n    }\n}\n\nmodule.exports = getConfig\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Navbar, Button } from 'react-bootstrap'\n\nconst Header = ({ currentUser, signIn, signOut }) => (\n  <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" className=\"justify-content-between\">\n    <Navbar.Brand>\n      <Link to=\"/\">NEARoverflow</Link>\n    </Navbar.Brand>\n\n    {currentUser &&\n      <Button\n        variant=\"outline-light\"\n        onClick={signOut}>\n        Ⓝ Log out\n        </Button>\n    }\n    {!currentUser &&\n      <Button\n        variant=\"outline-light\"\n        onClick={signIn}>\n        Ⓝ Log in\n        </Button>\n    }\n  </Navbar>\n)\n\nHeader.propTypes = {\n  signIn: PropTypes.func.isRequired,\n  signOut: PropTypes.func.isRequired,\n  currentUser: PropTypes.object,\n}\n\nHeader.defaultProps = {\n  currentUser: null,\n}\n\nexport default Header","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport Header from './components/Header'\n\nclass App extends React.Component {\n\n  static propTypes = {\n    wallet: PropTypes.object.isRequired,\n    nearConfig: PropTypes.object.isRequired,\n    currentUser: PropTypes.object,\n  }\n\n  static defaultProps = {\n    currentUser: null,\n  }\n\n  state = { questionText: '' }\n\n  signIn = () => {\n    this.props.wallet.requestSignIn(\n      this.props.nearConfig.contractName,\n      \"NEAROverflow\"\n    )\n  }\n\n  signOut = () => {\n    this.props.wallet.signOut()\n    window.location.href = process.env.PUBLIC_URL\n  }\n\n  render() {\n    console.log(process.env.NODE_ENV)\n    return (\n      <>\n        <Header\n          currentUser={this.props.currentUser}\n          signIn={this.signIn}\n          signOut={this.signOut}\n        />\n        <Container>\n          {this.props.children}\n        </Container>\n      </>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  currentUser: state.commonReducer.currentUser,\n  nearConfig: state.commonReducer.nearConfig,\n  wallet: state.commonReducer.walletConnection,\n})\n\nexport default connect(mapStateToProps, null)(App)","const initialState = {\n  questions: null,\n}\n\nconst SET_QUESTIONS = 'Nearoverflow/questions/set_questions'\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_QUESTIONS:\n      return {\n        ...state,\n        questions: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const setQuestions = questions => dispatch => {\n  dispatch({\n    type: SET_QUESTIONS,\n    payload: questions,\n  })\n}","import Big from 'big.js'\n\nexport const QUESTION_MIN_PRICE = Big(10).times(10 ** 24).toFixed();\nexport const ANSWER_PRICE = Big(1).times(10 ** 24).toFixed()\nexport const BOATLOAD_OF_GAS = Big(1).times(10 ** 16).toFixed()","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col, Form, Button, Jumbotron } from 'react-bootstrap'\n\nimport {\n  QUESTION_MIN_PRICE,\n  BOATLOAD_OF_GAS,\n} from '../../lib/constants'\n\nclass QuestionForm extends React.Component {\n\n  static propTypes = {\n    contract: PropTypes.object.isRequired,\n    currentUser: PropTypes.object,\n  }\n\n  static defaultProps = {\n    currentUser: null,\n  }\n\n  state = { questionText: '' }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    if (this.state.questionText.length > 0) {\n      this.props.contract.create_question(\n        { content: this.state.questionText, reward: QUESTION_MIN_PRICE },\n        BOATLOAD_OF_GAS,\n        QUESTION_MIN_PRICE,\n      )\n    }\n    return false\n  }\n\n  render() {\n    return (\n      <Jumbotron>\n        <Container>\n          <Row>\n            <Col>\n              <h1>Ask a question!</h1>\n              <p>\n                Simply ask a question and give the reward to the correct answer (10 Ⓝ)\n              </p>\n              <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    value={this.state.questionText}\n                    onChange={\n                      (e) => { this.setState({ questionText: e.target.value }) }\n                    }\n                    placeholder=\"Post new quesion\"\n                  />\n                </Form.Group>\n                <Button type='submit' variant=\"outline-dark\">Post new quetsion</Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  contract: state.commonReducer.contract,\n  currentUser: state.commonReducer.currentUser,\n})\n\nexport default connect(mapStateToProps, null)(QuestionForm)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Big from 'big.js'\n\n\nconst Box = ({ title, number, active, className }) => (\n  <div className={`box ${active ? 'active' : ''} ${className}`}>\n    <span>{title}</span>\n    <span className=\"number\">{Big(number).times(10 ** -24).toFixed(0)} Ⓝ</span>\n  </div>\n)\n\nBox.propTypes = {\n  title: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n}\n\nBox.defaultProps = {\n  active: false,\n  className: \"\",\n}\n\nexport default Box","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Card, Container, Row, Col } from 'react-bootstrap'\n\nimport Box from '../Box'\n\nconst QuestionListItem = ({ questionId, answers, reward, author_account_id, content }) => (\n  <Card>\n    <Card.Body>\n      <Container>\n        <Row>\n          <Col xs={2}>\n            <Box\n              active={answers.filter(ans => ans.is_correct === true).length > 0}\n              title=\"Reward\"\n              number={reward}\n            />\n          </Col>\n          <Col>\n            <Card.Text className=\"author\">@{author_account_id}</Card.Text>\n            <Card.Title>\n              <Link to={`/${questionId}`}>{content}</Link>\n            </Card.Title>\n          </Col>\n          <Col xs={2}>\n            <div className=\"box\">\n              <span>Answers:</span>\n              <span className=\"number\">{answers.length}</span>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Card.Body>\n  </Card>\n)\n\nQuestionListItem.propTypes = {\n  questionId: PropTypes.string.isRequired,\n  reward: PropTypes.number.isRequired,\n  author_account_id: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  answers: PropTypes.arrayOf(PropTypes.object),\n}\n\nQuestionListItem.defaultProps = {\n  answers: [],\n}\n\nexport default QuestionListItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\n\nimport { setQuestions } from '../../modules/questions'\nimport QuestionForm from '../QuestionForm'\nimport QuestionListItem from './item'\n\n\nclass QuestionList extends React.Component {\n\n  static propTypes = {\n    setQuestions: PropTypes.func.isRequired,\n    contract: PropTypes.object.isRequired,\n    questions: PropTypes.object,\n    currentUser: PropTypes.object\n  }\n\n  static defaultProps = {\n    questions: null,\n    currentUser: null,\n  }\n\n  componentDidMount() {\n    this.props.contract.list_questions()\n      .then(response => this.props.setQuestions(response))\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.currentUser && <QuestionForm />}\n        {this.props.questions &&\n          <Row>\n            <Col><h2>Questions:</h2></Col>\n          </Row>\n        }\n        <Row>\n          <Col>\n            {\n              this.props.questions &&\n              Object\n                .keys(this.props.questions)\n                .slice(0)\n                .reverse()\n                .map(questionId =>\n                  <QuestionListItem\n                    key={`question_${questionId}`}\n                    questionId={questionId}\n                    {...this.props.questions[questionId]} />\n                )\n            }\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  contract: state.commonReducer.contract,\n  currentUser: state.commonReducer.currentUser,\n  questions: state.questionsReducer.questions,\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    setQuestions,\n  }\n)(QuestionList)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Container, Row, Col, Card, Button, Spinner } from 'react-bootstrap'\n\nimport Box from '../Box'\n\nclass Answer extends React.Component {\n\n  static propTypes = {\n    markAsCorrect: PropTypes.func.isRequired,\n    upvoteAnswer: PropTypes.func.isRequired,\n    account_id: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    reward: PropTypes.number.isRequired,\n    is_correct: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    questionIsLocked: PropTypes.bool.isRequired,\n    questionAuthor: PropTypes.string.isRequired,\n  }\n\n  state = { isLoading: false }\n\n  handleMarkAsCorrect = (e) => {\n    this.setState({ isLoading: true }, () => {\n      this.props.markAsCorrect(this.props.id)\n    })\n  }\n\n  handleUpvote = (e) => {\n    this.props.upvoteAnswer(this.props.id)\n  }\n\n  render() {\n    let { account_id, content, reward, is_correct } = this.props\n    return (\n      <Card>\n        <Card.Body>\n          <Container>\n            <Row>\n              <Col xs={2}>\n                <Box\n                  active={is_correct}\n                  title=\"Reward\"\n                  number={reward}\n                />\n                <Button\n                  block\n                  className=\"upvote\"\n                  variant=\"outline-dark\"\n                  sime='sm'\n                  onClick={this.handleUpvote}\n                >\n                  Upvote 1 Ⓝ\n                </Button>\n              </Col>\n              <Col>\n                {\n                  !this.props.questionIsLocked &&\n                  this.props.currentUser &&\n                  this.props.currentUser.accountId === this.props.questionAuthor &&\n                  <Button\n                    className=\"mark-as-correct\"\n                    variant=\"outline-success\"\n                    size='sm'\n                    onClick={this.handleMarkAsCorrect}\n                  >\n                    {this.state.isLoading ?\n                      <Spinner animation=\"border\" size=\"sm\" />\n                      : \"Mark as correct\"\n                    }\n                  </Button>\n                }\n                <Card.Text className=\"author\">@{account_id}</Card.Text>\n                <Card.Title>{content}</Card.Title>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  contract: state.commonReducer.contract,\n  currentUser: state.commonReducer.currentUser,\n})\n\nexport default connect(mapStateToProps, null)(Answer)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Row, Col, Form, Button, Card, Alert } from 'react-bootstrap'\n\nimport { BOATLOAD_OF_GAS, ANSWER_PRICE } from '../../lib/constants'\n\nclass AnswerForm extends React.Component {\n\n  static propTypes = {\n    contract: PropTypes.object.isRequired,\n    questionId: PropTypes.string.isRequired,\n  }\n\n  state = { content: '' }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (this.state.content.length > 0) {\n      this.props.contract.create_answer(\n        {\n          question_id: parseInt(this.props.questionId, 10),\n          content: this.state.content,\n        },\n        BOATLOAD_OF_GAS,\n        ANSWER_PRICE\n      ).then(() => {\n        this.setState({ content: '' })\n      })\n    }\n    return false\n  }\n\n  render() {\n    return (\n      <Row>\n        <Col>\n          <Card className=\"form-card\">\n            <Card.Body>\n              <Card.Title>Post Answer</Card.Title>\n              <Form onSubmit={this.handleSubmit}>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Answer\"\n                    value={this.state.content}\n                    onChange={(e) => this.setState({ content: e.target.value })}\n                  />\n                </Form.Group>\n                <Alert variant='secondary'>\n                  To post an answer costs 1 Ⓝ but then you have a chance to grab the question reward.\n                  </Alert>\n                <Button type=\"submit\" variant=\"outline-dark\">Submit answer</Button>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  contract: state.commonReducer.contract,\n})\n\nexport default connect(mapStateToProps, null)(AnswerForm)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Big from 'big.js'\nimport { connect } from 'react-redux'\nimport { Row, Col, Card, Container } from 'react-bootstrap'\nimport { withRouter } from 'react-router-dom'\n\nimport { setQuestions } from '../../modules/questions'\n\nimport Answer from '../Answer'\nimport AnswerForm from '../AnswerForm'\nimport Box from '../Box'\nimport { BOATLOAD_OF_GAS } from '../../lib/constants'\n\nclass QuestionDetail extends React.Component {\n\n  static propTypes = {\n    setQuestions: PropTypes.func.isRequired,\n    contract: PropTypes.object.isRequired,\n    currentUser: PropTypes.object,\n    questions: PropTypes.object\n  }\n\n  static defaultProps = {\n    questions: null,\n    currentUser: null,\n  }\n\n  componentDidMount() {\n    if (!this.props.questions) {\n      this.props.contract.list_questions()\n        .then(response => this.props.setQuestions(response))\n    }\n  }\n\n  markAsCorrect = (answerId) => {\n    let { questionId } = this.props.match.params\n    let question = this.props.questions[questionId]\n    let answer = question.answers.filter(ans => ans.id === answerId)[0]\n\n    if (question.answers.filter(ans => ans.is_correct === true).length > 0) {\n      alert(\"ERROR: This question already has correct answer\")\n      return false\n    }\n\n    if (\n      this.props.currentUser &&\n      this.props.currentUser.accountId === question.author_account_id &&\n      this.props.currentUser.accountId !== answer.account_id\n    ) {\n      this.props.contract.set_correct_answer(\n        { question_id: parseInt(questionId, 10), answer_id: answerId }\n      ).then(() => {\n        this.props.contract.list_questions()\n          .then(response => this.props.setQuestions(response))\n      })\n    } else {\n      alert(\"ERROR: You're not allowed to perform this action\")\n    }\n    return false\n  }\n\n  upvote = (answerId) => {\n    let { questionId } = this.props.match.params\n\n    this.props.contract.upvote_answer(\n      {\n        question_id: parseInt(questionId, 10),\n        answer_id: answerId\n      },\n      BOATLOAD_OF_GAS,\n      Big(1).times(10 ** 24).toFixed()\n    )\n  }\n\n  render() {\n    let { questionId } = this.props.match.params\n    if (!this.props.questions) return null\n    let props = this.props.questions[questionId]\n    if (!props) return null\n    let questionIsLocked = props.answers.filter(ans => ans.is_correct === true).length > 0\n    return (\n      <>\n        <Row>\n          <Col>\n            <Card>\n              <Card.Body>\n                <Container>\n                  <Row>\n                    <Col xs={2}>\n                      <Box\n                        active={questionIsLocked}\n                        title=\"Reward\"\n                        number={props.reward}\n                      />\n                    </Col>\n                    <Col>\n                      <Card.Text className=\"author\">@{props.author_account_id}</Card.Text>\n                      <Card.Title>{props.content}</Card.Title>\n                    </Col>\n                  </Row>\n                </Container>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        {props.answers.length > 0 &&\n          <Row>\n            <Col>\n              <h2>Answers: </h2>\n              {props.answers.map(answer =>\n                <Answer\n                  questionIsLocked={questionIsLocked}\n                  questionAuthor={props.author_account_id}\n                  markAsCorrect={this.markAsCorrect}\n                  upvoteAnswer={this.upvote}\n                  key={`answer_${answer.id}`}\n                  {...answer}\n                />\n              )}\n            </Col>\n          </Row>\n        }\n        <AnswerForm questionId={this.props.match.params.questionId} />\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  contract: state.commonReducer.contract,\n  currentUser: state.commonReducer.currentUser,\n  questions: state.questionsReducer.questions\n})\n\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      setQuestions\n    }\n  )(QuestionDetail)\n)","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nimport App from './App'\nimport QuestionsList from './components/QuestionsList'\nimport QuestionDetail from './components/QuestionDetail'\n\n\nexport default () => (\n  <Router>\n    <App>\n      <Switch>\n        <Route exact path='/'>\n          <QuestionsList />\n        </Route>\n        <Route path='/:questionId'>\n          <QuestionDetail />\n        </Route>\n      </Switch>\n    </App>\n  </Router>\n)","const INITIAL_STATE = {\n  contract: null,\n}\n\n\nexport default (state = INITIAL_STATE, action) => {\n  return state\n}","import { combineReducers } from 'redux'\n\nimport commonReducer from './common'\nimport questionsReducer from './questions'\n\nexport default combineReducers({\n  commonReducer,\n  questionsReducer,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunkMiddleware from 'redux-thunk'\nimport * as nearAPI from 'near-api-js'\n\n// import * as serviceWorker from './serviceWorker';\nimport Routes from './routes';\nimport getConfig from './config.js'\nimport reducers from './modules'\n\nimport './custom.scss';\n\nconst createStoreWithMiddleware = applyMiddleware(thunkMiddleware)(createStore)\n\n// Initializing contract\nasync function initContract() {\n  const nearConfig = getConfig('development')\n\n  // Initializing connection to the NEAR DevNet\n  const near = await nearAPI.connect({\n    deps: {\n      keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore()\n    },\n    ...nearConfig\n  })\n\n  // Needed to access wallet\n  const walletConnection = new nearAPI.WalletConnection(near)\n\n  // Load in account data\n  let currentUser\n  if (walletConnection.getAccountId()) {\n    currentUser = {\n      accountId: walletConnection.getAccountId(),\n      balance: (await walletConnection.account().state()).amount\n    }\n  }\n\n  // Initializing our contract APIs by contract name and configuration\n  const contract = await new nearAPI.Contract(walletConnection.account(), nearConfig.contractName, {\n    // View methods are read-only – they don't modify the state, but usually return some value\n    viewMethods: ['list_questions'],\n    // Change methods can modify the state, but you don't receive the returned value when called\n    changeMethods: [\n      'create_question',\n      'create_answer',\n      'upvote_answer',\n      'set_correct_answer',\n    ],\n    // Sender is the account ID to initialize transactions.\n    // getAccountId() will return empty string if user is still unauthorized\n    sender: walletConnection.getAccountId()\n  })\n\n  return { contract, currentUser, nearConfig, walletConnection }\n}\n\nwindow.nearInitPromise = initContract()\n  .then(initialProps => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <Provider store={createStoreWithMiddleware(reducers, { commonReducer: initialProps })}>\n          <Routes />\n        </Provider>\n      </React.StrictMode>,\n      document.getElementById('root')\n    )\n  });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}